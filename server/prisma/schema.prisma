// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file: database/cms.db"
}

model Profile {
  id        Int      @id @default(autoincrement())
  name      String
  password  String
  email     String   @unique
  contact   String   @unique
  createdAt DateTime @default(now())
  role      String   @default("USER")

  User  User?
  Admin Admin?
}

model Complaint {
  id          Int       @id @default(autoincrement())
  title       String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  userId      Int

  upvotedBy User[]     @relation(name: "UpvotesOnComplaints")
  user      User       @relation(name: "RegisteredComplaints", fields: [userId], references: [id])
  Work      Work?
  Validated Validated?
}

model User {
  id         Int    @id @default(autoincrement())
  profileId  Int    @unique
  department String
  rollNo     String @unique

  profile           Profile?    @relation(fields: [profileId], references: [id])
  Complaint         Complaint[] @relation(name: "RegisteredComplaints")
  upvotedComplaints Complaint[] @relation(name: "UpvotesOnComplaints")
  Reviewer          Reviewer?
}

model Admin {
  id          Int     @id @default(autoincrement())
  designation String?
  profileId   Int     @unique

  profile  Profile?    @relation(fields: [profileId], references: [id])
  assigned Validated[]
  Work     Work[]
}

model Reviewer {
  id     Int @id @default(autoincrement())
  userId Int @unique

  user      User?       @relation(fields: [userId], references: [id])
  Validated Validated[]
}

model Work {
  id            Int       @id @default(autoincrement())
  assignedBy    Int
  complaintId   Int       @unique
  validatedId   Int       @unique
  workerName    String
  workerContact String
  remarks       String?
  status        String
  assignedDate  DateTime? @updatedAt

  admin     Admin     @relation(fields: [assignedBy], references: [id])
  complaint Complaint @relation(fields: [complaintId], references: [id])
  validated Validated @relation(fields: [validatedId], references: [id])
}

model Validated {
  id          Int       @id @default(autoincrement())
  complaintId Int       @unique
  reviewerId  Int
  assignedTo  Int
  remarks     String
  validatedAt DateTime? @updatedAt

  reviewer  Reviewer  @relation(fields: [reviewerId], references: [id])
  complaint Complaint @relation(fields: [complaintId], references: [id])
  Admin     Admin     @relation(fields: [assignedTo], references: [id])
  Work      Work?
}
